{"version":3,"file":"requestdata.js","sources":["../../../src/integrations/requestdata.ts"],"sourcesContent":["// TODO (v8 or v9): Whenever this becomes a default integration for `@sentry/browser`, move this to `@sentry/core`. For\n// now, we leave it in `@sentry/integrations` so that it doesn't contribute bytes to our CDN bundles.\n\nimport { EventProcessor, Hub, Integration, Transaction } from '@sentry/types';\nimport { extractPathForTransaction } from '@sentry/utils';\n\nimport {\n  addRequestDataToEvent,\n  AddRequestDataToEventOptions,\n  DEFAULT_USER_INCLUDES,\n  TransactionNamingScheme,\n} from '../requestdata';\n\ntype RequestDataOptions = {\n  /**\n   * Controls what data is pulled from the request and added to the event\n   */\n  include: {\n    cookies?: boolean;\n    data?: boolean;\n    headers?: boolean;\n    ip?: boolean;\n    query_string?: boolean;\n    url?: boolean;\n    user?: boolean | Array<typeof DEFAULT_USER_INCLUDES[number]>;\n  };\n\n  /** Whether to identify transactions by parameterized path, parameterized path with method, or handler name */\n  transactionNamingScheme: TransactionNamingScheme;\n\n  /**\n   * Function for adding request data to event. Defaults to `addRequestDataToEvent` from `@sentry/node` for now, but\n   * left injectable so this integration can be moved to `@sentry/core` and used in browser-based SDKs in the future.\n   *\n   * @hidden\n   */\n  addRequestData: typeof addRequestDataToEvent;\n};\n\nconst DEFAULT_OPTIONS = {\n  addRequestData: addRequestDataToEvent,\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: DEFAULT_USER_INCLUDES,\n  },\n  transactionNamingScheme: 'methodpath',\n};\n\n/** Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/integrations`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`. */\nexport class RequestData implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RequestData';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = RequestData.id;\n\n  private _options: RequestDataOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: Partial<RequestDataOptions> = {}) {\n    this._options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      include: {\n        // @ts-ignore It's mad because `method` isn't a known `include` key. (It's only here and not set by default in\n        // `addRequestDataToEvent` for legacy reasons. TODO (v8): Change that.)\n        method: true,\n        ...DEFAULT_OPTIONS.include,\n        ...options.include,\n      },\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (eventProcessor: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n    // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n    // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be clened up. Once\n    // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n    const { include, addRequestData, transactionNamingScheme } = this._options;\n\n    addGlobalEventProcessor(event => {\n      const hub = getCurrentHub();\n      const self = hub.getIntegration(RequestData);\n      const req = event.sdkProcessingMetadata && event.sdkProcessingMetadata.request;\n\n      // If the globally installed instance of this integration isn't associated with the current hub, `self` will be\n      // undefined\n      if (!self || !req) {\n        return event;\n      }\n\n      const processedEvent = addRequestData(event, req, { include: formatIncludeOption(include) });\n\n      // Transaction events already have the right `transaction` value\n      if (event.type === 'transaction' || transactionNamingScheme === 'handler') {\n        return processedEvent;\n      }\n\n      // In all other cases, use the request's associated transaction (if any) to overwrite the event's `transaction`\n      // value with a high-quality one\n      const reqWithTransaction = req as { _sentryTransaction?: Transaction };\n      const transaction = reqWithTransaction._sentryTransaction;\n      if (transaction) {\n        // TODO (v8): Remove the nextjs check and just base it on `transactionNamingScheme` for all SDKs. (We have to\n        // keep it the way it is for the moment, because changing the names of transactions in Sentry has the potential\n        // to break things like alert rules.)\n        const shouldIncludeMethodInTransactionName =\n          getSDKName(hub) === 'sentry.javascript.nextjs'\n            ? transaction.name.startsWith('/api')\n            : transactionNamingScheme !== 'path';\n\n        const [transactionValue] = extractPathForTransaction(req, {\n          path: true,\n          method: shouldIncludeMethodInTransactionName,\n          customRoute: transaction.name,\n        });\n\n        processedEvent.transaction = transactionValue;\n      }\n\n      return processedEvent;\n    });\n  }\n}\n\n/** Convert `include` option to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction formatIncludeOption(\n  integrationInclude: RequestDataOptions['include'] = {},\n): AddRequestDataToEventOptions['include'] {\n  const { ip, user, ...requestOptions } = integrationInclude;\n\n  const requestIncludeKeys: string[] = [];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  return {\n    ip,\n    user,\n    request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n  };\n}\n\nfunction getSDKName(hub: Hub): string | undefined {\n  try {\n    // For a long chain like this, it's fewer bytes to combine a try-catch with assuming everything is there than to\n    // write out a long chain of `a && a.b && a.b.c && ...`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return hub.getClient()!.getOptions()!._metadata!.sdk!.name;\n  } catch (err) {\n    // In theory we should never get here\n    return undefined;\n  }\n}\n"],"names":[],"mappings":"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"}